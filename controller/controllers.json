{
    "metadata" : {
        "pid" : {
            "friendly_name" : "PID Standard",
            "module_name" : "pid",
            "image" : "pid.png",
            "description" : "The standard PID controller for PiFire, used by default. This software was originally developed by GitHub user DBorello as part of his excellent PiSmoker project.  Slightly modified by @weberbox and adapted for PiFire. ",
            "author" : "Dan Borello",
            "link" : "https://github.com/DBorello/PiSmoker", 
            "contributors" : ["Ben Parmeter", "James Weber"],
            "attributions" : [],
            "recommendations" : {
                "cycle" : { 
                    "cycle_time" : 25,
                    "cycle_ratio_min" : 0.1,
                    "cycle_ratio_max" : 0.9
                }   
            },
            "config" : [
                {
                    "option_name" : "PB",
                    "option_friendly_name" : "Proportional Band(PB)", 
                    "option_description" : "This is the temperature band centered around the set point, that the controller is active.  If the error is greater than PB/2, the command is 0.  If the error is less than PB/2, the command is 1.0",
                    "option_type" : "float",
                    "option_default" : 120.0,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 0.1,
                    "hidden" : false
                },
                {
                    "option_name" : "Td",
                    "option_friendly_name" : "Derivative Time (Td)", 
                    "option_description" : "Time (in seconds) to predict the future value.",
                    "option_type" : "float",
                    "option_default" : 45.0,
                    "option_min" : null,
                    "option_max" : null,
                    "option_step" : 0.1,  
                    "hidden" : false
                },
                {
                    "option_name" : "Ti",
                    "option_friendly_name" : "Integral Time (Ti)", 
                    "option_description" : "Time (in seconds) to eliminate the integral error.",
                    "option_type" : "float",
                    "option_default" : 180.0,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 0.1,
                    "hidden" : false
                },
                {
                    "option_name" : "center",
                    "option_friendly_name" : "Center Ratio", 
                    "option_description" : "Center of Cycle Ratio, which is specific to the way this PID will behave.",
                    "option_type" : "float",
                    "option_default" : 0.0,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 0.01, 
                    "hidden" : false
                }
            ]
        },
        "fuzzy" : {
            "friendly_name" : "Fuzzy Logic Controller",
            "module_name" : "fuzzy",
            "image" : "fuzzy.png",
            "description" : "**EXPERIMENTAL** Use of this controller is at your own risk.  This is an attempt at designing a fuzzy logic controller for set temperature control.  It is currently using Scikit Fuzzy's Python Module to implement a relatively straightforward fuzzy logic controller.  This controller should be considered pre-Alpha and extremely experimental.  This module will store the fuzzy logic controller in an object, which is saved/pickled in the controller directory, named 'fuzzy.pickle'.  If any changes are made to the default fuzzy logic controller settings, then this pickle file should be deleted so that a new object can be created with new settings.  Note that it may take a very long time for the object to be generated on the Raspberry Pi due to the limited performance capabilities of that processor.",
            "author" : "Ben Parmeter",
            "link" : "https://nebhead.github.io/PiFire", 
            "contributors" : [],
            "attributions" : ["Sci-Kit Fuzzy"],
            "recommendations" : {
                "cycle" : { 
                    "cycle_time" : 25,
                    "cycle_ratio_min" : 0.1,
                    "cycle_ratio_max" : 1.0
                }   
            },
            "config" : []
        }, 
        "ml" : {
            "friendly_name" : "Machine Learning Controller",
            "module_name" : "ml",
            "image" : "",
            "description" : "**EXPERIMENTAL** This controller is NOT recommended for use at this time.  This is an attempt at designing a machine learning based controller for set temperature control.  It is currently using Scikit Learn Python Module to implement a relatively straightforward machine learning controller.  This controller should be considered pre-Alpha and extremely experimental.  This module will store the machine learning controller in an object, which is saved in the controller directory, named 'ml_model.joblib'.  If any changes are made to the default controller settings, then this joblib file should be deleted so that a new object can be created with new settings.  Note that it may take a very long time for the object to be generated on the Raspberry Pi due to the limited performance capabilities of that processor.",
            "author" : "Ben Parmeter",
            "link" : "https://nebhead.github.io/PiFire", 
            "contributors" : [],
            "attributions" : ["Sci-Kit Learn"],
            "recommendations" : {
                "cycle" : { 
                    "cycle_time" : 25,
                    "cycle_ratio_min" : 0.1,
                    "cycle_ratio_max" : 1.0
                }   
            },
            "config" : []
        }
    }
}
